apply plugin: 'java'

sourceSets {
    main {
        java {
            srcDir 'slice'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.zeroc.com/nexus/content/repositories/releases'
    }
}

dependencies {
    compile 'com.zeroc:ice:3.5.0'
}

task compileSlice(type: Exec) {
    def sliceDir = new File("${projectDir}/slice/main/java")
    sliceDir.mkdirs()

    commandLine 'slice2freezej', '--dict ome.services.sharing.data.ShareMap,long,ome::services::sharing::data::ShareData', '--dict-index ome.services.sharing.data.ShareMap,id', '--dict-index ome.services.sharing.data.ShareMap,owner', '--output-dir', "${projectDir}/slice/main/java", "${projectDir}/src/main/slice/Share.ice"
    commandLine 'slice2freezej', '--dict ome.services.sharing.data.ShareItems,long,ome::services::sharing::data::ShareItem', '--dict-index ome.services.sharing.data.ShareItems,type', '--dict-index ome.services.sharing.data.ShareItems,share', '--output-dir', "${projectDir}/slice/main/java", "${projectDir}/src/main/slice/Share.ice"
    commandLine 'slice2java', '--output-dir', "${projectDir}/slice/main/java", "${projectDir}/src/main/slice/Share.ice"

    standardOutput = new ByteArrayOutputStream()

    ext.output = {
        println standardOutput.toString()
    }

}

gradle.projectsEvaluated {
    compileJava.dependsOn(compileSlice)
}

String getRuntimeClasspath() {
    sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
}
